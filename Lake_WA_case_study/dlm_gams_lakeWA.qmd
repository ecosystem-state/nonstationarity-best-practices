---
title: "DLMs and GAMs for Lake Washington data"
format: pdf
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  warning = FALSE,  
  error = FALSE,    
  message = FALSE
)
```

```{r}
library(MARSS)
library(mgcv)
library(dplyr)
library(forecast)
library(ggplot2)
library(lubridate)
library(viridis)
```

## Data

```{r}
dat <- as.data.frame(MARSS::lakeWAplanktonRaw)
dat$date <- make_date(dat$Year, dat$Month, day = 1)
```

The major change here is related to sewage in the lake – adding wastewater plants in the 1960s reduced phosphorous (TP) and in turn, blue green algae.

```{r}
p1 <- ggplot(dat, aes(date, TP)) + 
  geom_point() + ylab("Total phosphorous") + xlab("") + theme_bw()
p2 <- ggplot(dat, aes(date, log(Bluegreens+1))) + 
  geom_point() + ylab("Ln Blue-green algae") + xlab("") + theme_bw()
#gridExtra::grid.arrange(p1,p2,nrow=2)

```

We can use the MARSS package to fit a DLM. We'll filter the data to only use counts before 1974, and log transform densities. We also z-score the covariate. This is a good example of imperfect data – there's a couple of missing observations in the covariate, which we can't have in a DLM or GAM – so let's just fill them in with a spline.

```{r}
dat <- dplyr::filter(dat, Year < 1974) %>%
  dplyr::mutate(y = log(Bluegreens), zp = as.numeric(scale(TP)))

interpolated <- spline(dat$zp, xout = 1:nrow(dat))$y
dat$zp[which(is.na(dat$zp))] <- interpolated[which(is.na(dat$zp))]

```

The response data exhibit a strong seasonal cycle – and it's a good idea to de-season that to focus on the phosphorous effect.

```{r}
# Fill in a few missing values
dat$y_interp <- dat$y
interpolated <- spline(dat$y, xout = 1:nrow(dat))$y
missing <- which(is.na(dat$y_interp))
dat$y_interp[missing] <- interpolated[missing]

dat <- dplyr::group_by(dat, Month) %>%
  dplyr::mutate(month_mean = mean(y,na.rm=T)) %>%
  dplyr::ungroup() %>%
  dplyr::mutate(y_adj = y_interp - month_mean)

```

Last, we should look at the lags between driver and response relationships. The CCF here indicates a 2-4 month lag, where TP and algae are more strongly associated with one another.

```{r}
# We can also try to do a CCF analysis between phosphorous and algae

ccf(dat$y_adj, dat$zp)
```

We'll use a lag of 4 months.

```{r}
lag_n <- 5
dat$lagged_zp <- c(rep(NA, lag_n), dat$zp[1:(nrow(dat)-lag_n)]) 
dat <- dat[-c(1:lag_n),]
```

## GAMs

```{r}
# The 'sp' parameter also controls the penalty on smoothing (below)
dat$n_date <- as.numeric(as.factor(dat$date))

gam_cr1 <- gam(y_adj ~ s(lagged_zp, bs = "cr"), data = dat)
gam_cr2 <- gam(y_adj ~ s(lagged_zp, by = n_date, bs = "cr"), data = dat)
gam_cr3 <- gam(y_adj ~ s(n_date, by = lagged_zp, bs = "cr"), data = dat)

plot_cr1 <- plot(gam_cr1, seWithMean = TRUE, n = nrow(dat))
df_cr1 <- data.frame(x = plot_cr1[[1]]$x,
est = plot_cr1[[1]]$fit,
se = plot_cr1[[1]]$se)

p1 <- ggplot(df_cr1, aes(x, est)) +
geom_ribbon(aes(ymin = est - 2*se, ymax = est + 2*se), alpha = 0.4, col = NA, fill=viridis(1)) +
theme_bw() +
geom_line(col = viridis(1)) + 
xlab("Phosphorous") +
ylab("Effect")
ggsave(p1, filename = "Figure_S1_nonlinear_smooth.png", height = 5, width=7)
# make second plot showing fits from all 3 models
pred_1 <- dat
pred_1$pred <- predict(gam_cr1)
pred_1$smooth <- "s(phos)"
pred_2 <- dat
pred_2$pred <- predict(gam_cr2)
pred_2$smooth <- "s(phos,by=date)"
pred_3 <- dat
pred_3$pred <- predict(gam_cr3)
pred_3$smooth <- "s(date,by=phos)"

d_all <- rbind(pred_1, pred_2, pred_3)
p2 <- ggplot(d_all, aes(date, y_adj, col = smooth)) + 
  geom_point(col="black") + 
  theme_bw() + 
  geom_line(aes(date, pred), size=2,alpha=0.5) + 
  xlab("") + ylab("Detrended cyanobacteria") + 
  scale_color_viridis_d(option="magma",begin=0.2, end=0.8)
ggsave(p2, filename = "Figure_S2_nonlinear_v_nonstationary.png", height = 5, width=7)


```

```{r}
# extract the smooth estimates with SEs to compare to DLM
plot_cr2 <- plot(gam_cr2, seWithMean = TRUE, n = nrow(dat))
plot_cr3 <- plot(gam_cr3, seWithMean = TRUE, n = nrow(dat))

df_cr2 <- data.frame(lagged_zp = dat$lagged_zp,
est = plot_cr2[[1]]$fit,
se = plot_cr2[[1]]$se)

p3 <- ggplot(df_cr2, aes(lagged_zp, est)) +
geom_ribbon(aes(ymin = est - 2*se, ymax = est + 2*se), alpha = 0.4, col = NA, fill=viridis(1)) +
theme_bw() +
geom_line(col = viridis(1)) + 
xlab("Phosphorous") +
ylab("Date effect")

df_cr3 <- data.frame(date = dat$date,
est = plot_cr3[[1]]$fit,
se = plot_cr3[[1]]$se)

p4 <- ggplot(df_cr3, aes(date, est)) +
geom_ribbon(aes(ymin = est - 2*se, ymax = est + 2*se), alpha = 0.4, col = NA, fill=viridis(1)) +
theme_bw() +
geom_line(col = viridis(1)) + 
xlab("Date") +
ylab("Phosphorous effect")
# 
# combo <- gridExtra::grid.arrange(p1,p2,p3,p4,ncol=1)
# ggsave(combo, filename = "Fig_1.png", height=7, width=7)\

library(patchwork)

# Combine plots with labels using patchwork
combo <- (p1 + p2 + p3 + p4) +
  plot_layout(ncol = 1) +
  plot_annotation(tag_levels = "a") &
  theme(plot.tag.position = c(0.1, 0.95))
ggsave(combo, filename = "Fig_1.png", height=7, width=7)
```

```         
```
